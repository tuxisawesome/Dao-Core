def readconfig(file):
    with open("etc/" + file, "r") as f:
        x = f.readlines()
        y = []
        for line in x:
            if line.startswith("#") or line.startswith("//") or line == "":
                continue
            else:
                y.append(line.strip("\n"))
        return y

def writeconfig(file, config):
    with open("etc/" + file, "w") as f:
        f.write("# Autogenerated by writeconfig\n")
        for line in config:
            if not line.endswith("\n"):
                f.write(line + "\n")
            else: f.write(line)
        f.close()
    
def getvalue(config, key):
    keys = []
    vals = []
    for line in config:
        x = line.split("=")
        keys.append(x[0])
        vals.append(x[1])
    return vals[keys.index(key)].strip("\n")

def getkeys(config):
    keys = []
    vals = []
    for line in config:
        x = line.split("=")
        keys.append(x[0].strip("\n"))
        vals.append(x[1])
    return keys

def getkey(config, value):
    keys = []
    vals = []
    for line in config:
        x = line.split("=")
        keys.append(x[0])
        vals.append(x[1])
    return keys[vals.index(value)].strip("\n")

def setvalue(config, key, value):
    keys = []
    vals = []
    for line in config:
        x = line.split("=")
        keys.append(x[0])
        vals.append(x[1])
    try:
        vals[keys.index(key)] = value
    except ValueError or IndexError:
        keys.append(key)
        vals.append(value)
    newconfig = []
    for z in keys:
        newconfig.append(z + "=" + vals[keys.index(z)])

    return newconfig


def remkey(config, key):
    keys = []
    vals = []
    for line in config:
        x = line.split("=")
        keys.append(x[0])
        vals.append(x[1])
    try:
        vals.pop(keys.index(key))
        keys.pop(keys.index(key))
    except ValueError:
        pass
    newconfig = []
    for z in keys:
        newconfig.append(z + "=" + vals[keys.index(z)])

    return newconfig